;; Auto-generated. Do not edit!


(when (boundp 'pardon_action_server::TurnToHumanFeedback)
  (if (not (find-package "PARDON_ACTION_SERVER"))
    (make-package "PARDON_ACTION_SERVER"))
  (shadow 'TurnToHumanFeedback (find-package "PARDON_ACTION_SERVER")))
(unless (find-package "PARDON_ACTION_SERVER::TURNTOHUMANFEEDBACK")
  (make-package "PARDON_ACTION_SERVER::TURNTOHUMANFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude TurnToHumanFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass pardon_action_server::TurnToHumanFeedback
  :super ros::object
  :slots (_orientation _status ))

(defmethod pardon_action_server::TurnToHumanFeedback
  (:init
   (&key
    ((:orientation __orientation) (instance geometry_msgs::Quaternion :init))
    ((:status __status) (instance std_msgs::String :init))
    )
   (send-super :init)
   (setq _orientation __orientation)
   (setq _status __status)
   self)
  (:orientation
   (&rest __orientation)
   (if (keywordp (car __orientation))
       (send* _orientation __orientation)
     (progn
       (if __orientation (setq _orientation (car __orientation)))
       _orientation)))
  (:status
   (&rest __status)
   (if (keywordp (car __status))
       (send* _status __status)
     (progn
       (if __status (setq _status (car __status)))
       _status)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Quaternion _orientation
    (send _orientation :serialization-length)
    ;; std_msgs/String _status
    (send _status :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Quaternion _orientation
       (send _orientation :serialize s)
     ;; std_msgs/String _status
       (send _status :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Quaternion _orientation
     (send _orientation :deserialize buf ptr-) (incf ptr- (send _orientation :serialization-length))
   ;; std_msgs/String _status
     (send _status :deserialize buf ptr-) (incf ptr- (send _status :serialization-length))
   ;;
   self)
  )

(setf (get pardon_action_server::TurnToHumanFeedback :md5sum-) "5adcad5c6c073483cbd46dd8aca29213")
(setf (get pardon_action_server::TurnToHumanFeedback :datatype-) "pardon_action_server/TurnToHumanFeedback")
(setf (get pardon_action_server::TurnToHumanFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/Quaternion orientation
std_msgs/String status


================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: std_msgs/String
string data

")



(provide :pardon_action_server/TurnToHumanFeedback "5adcad5c6c073483cbd46dd8aca29213")


